AWSTemplateFormatVersion: '2010-09-09'

Parameters:
    EngineerName:
       Type: AWS::SSM::Parameter::Name
       Default: /matthew.holmes.labs/stelligent-u/lab11/matthewholmes
    EngStartDate:
       Type: AWS::SSM::Parameter::Value<String>
       Default: /matthew.holmes.labs/stelligent-u/lab11/matthewholmes/start-date
    EngState:
       Type: AWS::SSM::Parameter::Value<String>
       Default: /matthew.holmes.labs/stelligent-u/lab11/matthewholmes/state
    EngTeam:
       Type: AWS::SSM::Parameter::Value<String>
       Default: /matthew.holmes.labs/stelligent-u/lab11/matthewholmes/team
    EngTimezone:
       Type: AWS::SSM::Parameter::Value<String>
       Default: /matthew.holmes.labs/stelligent-u/lab11/matthewholmes/timezone
    EngMiddleName:
       Type: String
       Default: ${{resolve:ssm-secure:/matthew.holmes.labs/stelligent-u/lab11/matthewholmes/middle-name:1}}

Resources:
#auto scaling group
  WebServerAsg:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AutoScalingGroupName: 'AutomationBoxes'
      VPCZoneIdentifier:
        - subnet-005433d8b68b28820 # Find public subnets within the default VPC or 
        - subnet-0044bef0a98e97bed
      DesiredCapacity: '3'
      HealthCheckType: 'ELB'
      HealthCheckGracePeriod: 30 
      LaunchConfigurationName: !Ref WebServersLC
      MaxSize: '3'
      MinSize: '3'
      TargetGroupARNs: 
      - !Ref MyApplicationLoadBalancerTargetGrp 
#load balancer target group 
  MyApplicationLoadBalancerTargetGrp:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /index.html
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 6
      HealthyThresholdCount: 5
      Name: DemoTargetGroup
      Port: 80
      Protocol: HTTP
      Tags: 
        - Key: user
          Value: matthew.holmes.labs
        - Key: stelligent-u-lesson
          Value: "7.1"
        - Key: stelligent-u-lab
          Value: "7.1.1"
      TargetType: instance
      UnhealthyThresholdCount: 2
      VpcId: vpc-0f34f4c461591c580
#application load balancer
  MyAppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups: 
        - sg-08315a5272a79e074
      Subnets: 
        - subnet-056aad7258644fef6 # Find public subnets within the default VPC or 
        - subnet-0908d47d122716626
      Tags: 
        - Key: user
          Value: matthew.holmes.labs
        - Key: stelligent-u-lesson
          Value: "7.1"
        - Key: stelligent-u-lab
          Value: "7.1.1"
      Type: application
#load balancing listener
  DemoListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions: 
      - TargetGroupArn: !Ref MyApplicationLoadBalancerTargetGrp
        Type: forward
      LoadBalancerArn: !Ref MyAppLoadBalancer
      Port: 80
      Protocol: HTTP
#auto scaling launch config
  WebServersLC:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      KeyName: mlh
      ImageId: ami-0000025f7c02a13b2
      InstanceType: t2.micro
      LaunchConfigurationName: SimpleWebServerLC
      SecurityGroups:
        - sg-091633ff1c3f17f9a
      UserData: 
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash -xe
            sudo amazon-linux-extras install nginx1
            sudo chmod a+w /usr/share/nginx/html/index.html
            echo '<ul><li>${EngineerName}</li><li>${EngMiddleName}</li><li>${EngStartDate}</li><li>${EngState}</li><li>${EngTeam}</li><li>${EngTimezone}</li></ul>' > /usr/share/nginx/html/index.html
            cd /bin && sudo nginx

Outputs:
  LoadBalancerDNSName:
     Description: load balancer DNS endpoint
     Value: !GetAtt MyAppLoadBalancer.DNSName

